#!/usr/bin/env bash

####################
#  CHECK FOR ROOT  #
####################

if [ "$(id -u)" -ne 0 ]; then echo " $red Please run as root.$clr ex. sudo restoefi" >&2; exit; fi
##########################################################

### Help #############
if [ "$1" = "-h" ]; then
echo 'restoefi <num>'
echo 'restoefi for a prompt for snapshot number'
exit
fi
######################

mountpoint -q /mnt/btrfs || mount -o subvolid=5 /dev/mapper/cryptroot /mnt/btrfs
mountpoint -q /mnt/efi || mount /dev/nvme0n1p1 /mnt/efi
systemctl stop snapper-timeline.timer
systemctl stop snapper-cleanup.timer
if [ -x "$(command -v snapper)" ]; then
snapper list 2>/dev/null


elif  ! [ -x "$(command -v snapper)" ] & [ -x "$(command -v xmllint)" ]; then
xmllint --xpath 'string(/snapshot)' /mnt/btrfs/@snapshots/*/info.xml | tac | more


#elif  ! [ -x "$(command -v snapper)" ] & ! [ -x "$(command -v xmllint)" ]; then

else
grep -E ' <date>|<type>|<description>' /mnt/btrfs/@snapshots/*/info.xml | awk -F '</[^}]*>' '{print $1 $2}' | sed 's/[i][^:]*//' | sed 's/[/][^s]*//' | sed 's/[<][^>>]*//' | tac | more
fi
#ls  /mnt/btrfs/@snapshots | tr '\n' '\n'
#snapper list 2>/dev/null
#btrfs-list -S -q --show-otime / | grep @snapshots/ | sort -r
#btrfs-assistant-bin -l

echo
read -p "Enter the snapshot number to restore : " snap
set -- "$snap" "$1"
echo -e "\nYou selected snapshot: '$1'"
echo
echo "Restore /efi backup from @snapshots/$1/ ?"
echo
function ask_yes_or_no() {
    read -p "$1 ([y]es or [N]o): "
    case $(echo $REPLY | tr '[A-Z]' '[a-z]') in
        y|yes) echo "yes" ;;
        *)     echo "no" ;;
    esac
}

if [[ "no" == $(ask_yes_or_no "Are you sure?") ]]; then
    echo "Skipped.....quitting."
! mountpoint -q /mnt/efi || umount /mnt/efi
! mountpoint -q /mnt/btrfs || umount /mnt/btrfs
systemctl start snapper-timeline.timer
systemctl start snapper-cleanup.timer
 exit 0
    fi

echo
echo "Restoring /efi backup from @snapshots/$1/"
echo
rsync -av --delete /mnt/btrfs/@snapshots/$1/snapshot/.efibackup/efi/EFI/Linux/ /mnt/efi/EFI/Linux/
if [[ $? -ne 0 ]] ; then
    echo "Efi restore was unsuccessful!"
! mountpoint -q /mnt/efi || umount /mnt/efi
! mountpoint -q /mnt/btrfs || umount /mnt/btrfs
systemctl start snapper-timeline.timer
systemctl start snapper-cleanup.timer
 exit 1
else
    echo
    echo "Snapshot $1 /efi restore completed successfully..."
    echo
fi
! mountpoint -q /mnt/efi || umount /mnt/efi
! mountpoint -q /mnt/btrfs || umount /mnt/btrfs
systemctl start snapper-timeline.timer
systemctl start snapper-cleanup.timer
echo "A system reboot is needed. Do it now?"
echo
function ask_yes_or_no() {
    read -p "$1 ([y]es or [N]o): "
    case $(echo $REPLY | tr '[A-Z]' '[a-z]') in
        y|yes) echo "yes" ;;
        *)     echo "no" ;;
    esac
}

if [[ "no" == $(ask_yes_or_no "Are you sure?") ]]; then
    echo "Skipped.....quitting."
    exit 0
    fi
echo system will reboot in 10 seconds (ctrl-c to quit)...
sleep 10;systemctl reboot
exit 0

